// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: fizzy_ocr_paddle.proto

package fizzyocr

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_fizzy_ocr_paddle_proto protoreflect.FileDescriptor

var file_fizzy_ocr_paddle_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x5f, 0x6f, 0x63, 0x72, 0x5f, 0x70, 0x61, 0x64, 0x64,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f,
	0x63, 0x72, 0x1a, 0x0f, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x5f, 0x6f, 0x63, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0x5e, 0x0a, 0x0e, 0x46, 0x69, 0x7a, 0x7a, 0x79, 0x4f, 0x63, 0x72, 0x50,
	0x61, 0x64, 0x64, 0x6c, 0x65, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x56, 0x31, 0x12, 0x17, 0x2e, 0x66, 0x69, 0x7a,
	0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4f, 0x43, 0x52,
	0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73,
	0x70, 0x22, 0x00, 0x42, 0x10, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f,
	0x63, 0x72, 0x90, 0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_fizzy_ocr_paddle_proto_goTypes = []interface{}{
	(*GeneralOCRReq)(nil),      // 0: fizzyocr.GeneralOCRReq
	(*GeneralPrintOCRRsp)(nil), // 1: fizzyocr.GeneralPrintOCRRsp
}
var file_fizzy_ocr_paddle_proto_depIdxs = []int32{
	0, // 0: fizzyocr.FizzyOcrPaddle.GeneralPrintOCRV1:input_type -> fizzyocr.GeneralOCRReq
	1, // 1: fizzyocr.FizzyOcrPaddle.GeneralPrintOCRV1:output_type -> fizzyocr.GeneralPrintOCRRsp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fizzy_ocr_paddle_proto_init() }
func file_fizzy_ocr_paddle_proto_init() {
	if File_fizzy_ocr_paddle_proto != nil {
		return
	}
	file_fizzy_ocr_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fizzy_ocr_paddle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fizzy_ocr_paddle_proto_goTypes,
		DependencyIndexes: file_fizzy_ocr_paddle_proto_depIdxs,
	}.Build()
	File_fizzy_ocr_paddle_proto = out.File
	file_fizzy_ocr_paddle_proto_rawDesc = nil
	file_fizzy_ocr_paddle_proto_goTypes = nil
	file_fizzy_ocr_paddle_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FizzyOcrPaddleClient is the client API for FizzyOcrPaddle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzyOcrPaddleClient interface {
	//通用印刷体识别V1
	GeneralPrintOCRV1(ctx context.Context, in *GeneralOCRReq, opts ...grpc.CallOption) (*GeneralPrintOCRRsp, error)
}

type fizzyOcrPaddleClient struct {
	cc grpc.ClientConnInterface
}

func NewFizzyOcrPaddleClient(cc grpc.ClientConnInterface) FizzyOcrPaddleClient {
	return &fizzyOcrPaddleClient{cc}
}

func (c *fizzyOcrPaddleClient) GeneralPrintOCRV1(ctx context.Context, in *GeneralOCRReq, opts ...grpc.CallOption) (*GeneralPrintOCRRsp, error) {
	out := new(GeneralPrintOCRRsp)
	err := c.cc.Invoke(ctx, "/fizzyocr.FizzyOcrPaddle/GeneralPrintOCRV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FizzyOcrPaddleServer is the server API for FizzyOcrPaddle service.
type FizzyOcrPaddleServer interface {
	//通用印刷体识别V1
	GeneralPrintOCRV1(context.Context, *GeneralOCRReq) (*GeneralPrintOCRRsp, error)
}

// UnimplementedFizzyOcrPaddleServer can be embedded to have forward compatible implementations.
type UnimplementedFizzyOcrPaddleServer struct {
}

func (*UnimplementedFizzyOcrPaddleServer) GeneralPrintOCRV1(context.Context, *GeneralOCRReq) (*GeneralPrintOCRRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneralPrintOCRV1 not implemented")
}

func RegisterFizzyOcrPaddleServer(s *grpc.Server, srv FizzyOcrPaddleServer) {
	s.RegisterService(&_FizzyOcrPaddle_serviceDesc, srv)
}

func _FizzyOcrPaddle_GeneralPrintOCRV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralOCRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzyOcrPaddleServer).GeneralPrintOCRV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fizzyocr.FizzyOcrPaddle/GeneralPrintOCRV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzyOcrPaddleServer).GeneralPrintOCRV1(ctx, req.(*GeneralOCRReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FizzyOcrPaddle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fizzyocr.FizzyOcrPaddle",
	HandlerType: (*FizzyOcrPaddleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneralPrintOCRV1",
			Handler:    _FizzyOcrPaddle_GeneralPrintOCRV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fizzy_ocr_paddle.proto",
}
