// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: fizzy_ocr.proto

package fizzyocr

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//文本的坐标，以四个顶点坐标表示 注意：此字段可能返回 null，表示取不到有效值
type Polygon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftTop     *Coord `protobuf:"bytes,1,opt,name=left_top,json=leftTop,proto3" json:"left_top,omitempty"`             // 左上顶点坐标
	RightTop    *Coord `protobuf:"bytes,2,opt,name=right_top,json=rightTop,proto3" json:"right_top,omitempty"`          // 右上顶点坐标
	RightBottom *Coord `protobuf:"bytes,3,opt,name=right_bottom,json=rightBottom,proto3" json:"right_bottom,omitempty"` // 右下顶点坐标
	LeftBottom  *Coord `protobuf:"bytes,4,opt,name=left_bottom,json=leftBottom,proto3" json:"left_bottom,omitempty"`    // 左下顶点坐标
}

func (x *Polygon) Reset() {
	*x = Polygon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polygon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polygon) ProtoMessage() {}

func (x *Polygon) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polygon.ProtoReflect.Descriptor instead.
func (*Polygon) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{0}
}

func (x *Polygon) GetLeftTop() *Coord {
	if x != nil {
		return x.LeftTop
	}
	return nil
}

func (x *Polygon) GetRightTop() *Coord {
	if x != nil {
		return x.RightTop
	}
	return nil
}

func (x *Polygon) GetRightBottom() *Coord {
	if x != nil {
		return x.RightBottom
	}
	return nil
}

func (x *Polygon) GetLeftBottom() *Coord {
	if x != nil {
		return x.LeftBottom
	}
	return nil
}

//坐标点
type Coord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"` //横坐标
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"` //纵坐标
}

func (x *Coord) Reset() {
	*x = Coord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coord) ProtoMessage() {}

func (x *Coord) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coord.ProtoReflect.Descriptor instead.
func (*Coord) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{1}
}

func (x *Coord) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coord) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

//OCR识别常规请求体
type CommonOCRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl    string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`          //图片的 Url 地址
	ImageBase64 string `protobuf:"bytes,2,opt,name=image_base64,json=imageBase64,proto3" json:"image_base64,omitempty"` //图片的 Base64 值
}

func (x *CommonOCRReq) Reset() {
	*x = CommonOCRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonOCRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonOCRReq) ProtoMessage() {}

func (x *CommonOCRReq) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonOCRReq.ProtoReflect.Descriptor instead.
func (*CommonOCRReq) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{2}
}

func (x *CommonOCRReq) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CommonOCRReq) GetImageBase64() string {
	if x != nil {
		return x.ImageBase64
	}
	return ""
}

//OCR识别请求体 (支持的图片格式：PNG、JPG、JPEG、GIF 格式)
type GeneralOCRReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl    string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`          //图片的 Url 地址
	ImageBase64 string `protobuf:"bytes,2,opt,name=image_base64,json=imageBase64,proto3" json:"image_base64,omitempty"` //图片的 Base64 值
	Lang        string `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`                                  //识别语种 (ch: 简体中文; en: 英文; ja: 日文; fr: 法文; de: 德文; ko: 韩文; ar: 阿拉伯文; ch: 繁体中文)
}

func (x *GeneralOCRReq) Reset() {
	*x = GeneralOCRReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralOCRReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralOCRReq) ProtoMessage() {}

func (x *GeneralOCRReq) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralOCRReq.ProtoReflect.Descriptor instead.
func (*GeneralOCRReq) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{3}
}

func (x *GeneralOCRReq) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GeneralOCRReq) GetImageBase64() string {
	if x != nil {
		return x.ImageBase64
	}
	return ""
}

func (x *GeneralOCRReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

// OCR响应体
type GeneralPrintOCRRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId      string                  `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`                 //日志ID
	Code       int32                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`                               //状态码
	Message    string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                          //响应信息
	ConsumTime int64                   `protobuf:"varint,4,opt,name=consum_time,json=consumTime,proto3" json:"consum_time,omitempty"` //接口耗时
	Data       *GeneralPrintOCRRspData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                //响应数据
}

func (x *GeneralPrintOCRRsp) Reset() {
	*x = GeneralPrintOCRRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralPrintOCRRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralPrintOCRRsp) ProtoMessage() {}

func (x *GeneralPrintOCRRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralPrintOCRRsp.ProtoReflect.Descriptor instead.
func (*GeneralPrintOCRRsp) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{4}
}

func (x *GeneralPrintOCRRsp) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *GeneralPrintOCRRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GeneralPrintOCRRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GeneralPrintOCRRsp) GetConsumTime() int64 {
	if x != nil {
		return x.ConsumTime
	}
	return 0
}

func (x *GeneralPrintOCRRsp) GetData() *GeneralPrintOCRRspData {
	if x != nil {
		return x.Data
	}
	return nil
}

// OCR识别数据集
type GeneralPrintOCRRspData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item []*GeneralPrintOCRRspDataItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"` //识别数据集
}

func (x *GeneralPrintOCRRspData) Reset() {
	*x = GeneralPrintOCRRspData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralPrintOCRRspData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralPrintOCRRspData) ProtoMessage() {}

func (x *GeneralPrintOCRRspData) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralPrintOCRRspData.ProtoReflect.Descriptor instead.
func (*GeneralPrintOCRRspData) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{5}
}

func (x *GeneralPrintOCRRspData) GetItem() []*GeneralPrintOCRRspDataItem {
	if x != nil {
		return x.Item
	}
	return nil
}

// OCR识别内容
type GeneralPrintOCRRspDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polygon *Polygon `protobuf:"bytes,1,opt,name=polygon,proto3" json:"polygon,omitempty"` //坐标点位
	Content string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //识别内容
	Score   float64  `protobuf:"fixed64,3,opt,name=score,proto3" json:"score,omitempty"`   //置信度
}

func (x *GeneralPrintOCRRspDataItem) Reset() {
	*x = GeneralPrintOCRRspDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneralPrintOCRRspDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneralPrintOCRRspDataItem) ProtoMessage() {}

func (x *GeneralPrintOCRRspDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneralPrintOCRRspDataItem.ProtoReflect.Descriptor instead.
func (*GeneralPrintOCRRspDataItem) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{6}
}

func (x *GeneralPrintOCRRspDataItem) GetPolygon() *Polygon {
	if x != nil {
		return x.Polygon
	}
	return nil
}

func (x *GeneralPrintOCRRspDataItem) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GeneralPrintOCRRspDataItem) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

//***************  OCR居民身份证识别  ***************
type IdentityCardRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogId      string               `protobuf:"bytes,1,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`                 //日志ID
	Code       int32                `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`                               //状态码
	Message    string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                          //响应信息
	ConsumTime int64                `protobuf:"varint,4,opt,name=consum_time,json=consumTime,proto3" json:"consum_time,omitempty"` //接口耗时
	Data       *IdentityCardRspData `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                                //响应数据
}

func (x *IdentityCardRsp) Reset() {
	*x = IdentityCardRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityCardRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityCardRsp) ProtoMessage() {}

func (x *IdentityCardRsp) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityCardRsp.ProtoReflect.Descriptor instead.
func (*IdentityCardRsp) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{7}
}

func (x *IdentityCardRsp) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *IdentityCardRsp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *IdentityCardRsp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *IdentityCardRsp) GetConsumTime() int64 {
	if x != nil {
		return x.ConsumTime
	}
	return 0
}

func (x *IdentityCardRsp) GetData() *IdentityCardRspData {
	if x != nil {
		return x.Data
	}
	return nil
}

type IdentityCardRspData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SuccessTotal int32                 `protobuf:"varint,1,opt,name=success_total,json=successTotal,proto3" json:"success_total,omitempty"` //成功识别证件数量
	Results      []*IdentityCardResult `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`                                //居民身份证结果集
}

func (x *IdentityCardRspData) Reset() {
	*x = IdentityCardRspData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityCardRspData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityCardRspData) ProtoMessage() {}

func (x *IdentityCardRspData) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityCardRspData.ProtoReflect.Descriptor instead.
func (*IdentityCardRspData) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{8}
}

func (x *IdentityCardRspData) GetSuccessTotal() int32 {
	if x != nil {
		return x.SuccessTotal
	}
	return 0
}

func (x *IdentityCardRspData) GetResults() []*IdentityCardResult {
	if x != nil {
		return x.Results
	}
	return nil
}

//居民身份证结果
type IdentityCardResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelCode         int32    `protobuf:"varint,1,opt,name=ModelCode,proto3" json:"ModelCode,omitempty"`                                         //模型代号
	Polygon           *Polygon `protobuf:"bytes,2,opt,name=polygon,proto3" json:"polygon,omitempty"`                                              //身份证定位
	IssueOrganization string   `protobuf:"bytes,3,opt,name=issue_organization,json=issueOrganization,proto3" json:"issue_organization,omitempty"` //签发机关
	ActiveDate        string   `protobuf:"bytes,4,opt,name=active_date,json=activeDate,proto3" json:"active_date,omitempty"`                      //有效期限
	Name              string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                                                    //姓名
	Gender            bool     `protobuf:"varint,6,opt,name=gender,proto3" json:"gender,omitempty"`                                               //性别
	Nation            string   `protobuf:"bytes,7,opt,name=nation,proto3" json:"nation,omitempty"`                                                //民族
	NationCode        int32    `protobuf:"varint,8,opt,name=nation_code,json=nationCode,proto3" json:"nation_code,omitempty"`                     //民族编码
	Birthday          string   `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`                                            //出生
	Address           string   `protobuf:"bytes,10,opt,name=address,proto3" json:"address,omitempty"`                                             //住址
	ResidentId        string   `protobuf:"bytes,11,opt,name=resident_id,json=residentId,proto3" json:"resident_id,omitempty"`                     //公民身份号码
}

func (x *IdentityCardResult) Reset() {
	*x = IdentityCardResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fizzy_ocr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityCardResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityCardResult) ProtoMessage() {}

func (x *IdentityCardResult) ProtoReflect() protoreflect.Message {
	mi := &file_fizzy_ocr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityCardResult.ProtoReflect.Descriptor instead.
func (*IdentityCardResult) Descriptor() ([]byte, []int) {
	return file_fizzy_ocr_proto_rawDescGZIP(), []int{9}
}

func (x *IdentityCardResult) GetModelCode() int32 {
	if x != nil {
		return x.ModelCode
	}
	return 0
}

func (x *IdentityCardResult) GetPolygon() *Polygon {
	if x != nil {
		return x.Polygon
	}
	return nil
}

func (x *IdentityCardResult) GetIssueOrganization() string {
	if x != nil {
		return x.IssueOrganization
	}
	return ""
}

func (x *IdentityCardResult) GetActiveDate() string {
	if x != nil {
		return x.ActiveDate
	}
	return ""
}

func (x *IdentityCardResult) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdentityCardResult) GetGender() bool {
	if x != nil {
		return x.Gender
	}
	return false
}

func (x *IdentityCardResult) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *IdentityCardResult) GetNationCode() int32 {
	if x != nil {
		return x.NationCode
	}
	return 0
}

func (x *IdentityCardResult) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *IdentityCardResult) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *IdentityCardResult) GetResidentId() string {
	if x != nil {
		return x.ResidentId
	}
	return ""
}

var File_fizzy_ocr_proto protoreflect.FileDescriptor

var file_fizzy_ocr_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x5f, 0x6f, 0x63, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x22, 0xc9, 0x01, 0x0a, 0x07,
	0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x7a, 0x7a,
	0x79, 0x6f, 0x63, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x07, 0x6c, 0x65, 0x66, 0x74,
	0x54, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x09, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x6f, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63,
	0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x08, 0x72, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f,
	0x70, 0x12, 0x32, 0x0a, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f,
	0x63, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x0b, 0x72, 0x69, 0x67, 0x68, 0x74, 0x42,
	0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x30, 0x0a, 0x0b, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x62, 0x6f,
	0x74, 0x74, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x7a,
	0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x0a, 0x6c, 0x65, 0x66,
	0x74, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x22, 0x23, 0x0a, 0x05, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x01, 0x79, 0x22, 0x4e, 0x0a, 0x0c,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x43, 0x52, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x22, 0x63, 0x0a, 0x0d,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4f, 0x43, 0x52, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66,
	0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66,
	0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x79, 0x0a, 0x1a, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x79, 0x67, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f,
	0x63, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x07, 0x70, 0x6f, 0x6c, 0x79,
	0x67, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x0f, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x31, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69,
	0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x72, 0x0a, 0x13, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x73, 0x22, 0xeb, 0x02, 0x0a, 0x12, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x6f, 0x6c,
	0x79, 0x67, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x7a,
	0x7a, 0x79, 0x6f, 0x63, 0x72, 0x2e, 0x50, 0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x52, 0x07, 0x70,
	0x6f, 0x6c, 0x79, 0x67, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x69, 0x73, 0x73, 0x75, 0x65, 0x5f,
	0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x69, 0x73, 0x73, 0x75, 0x65, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x3b, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fizzy_ocr_proto_rawDescOnce sync.Once
	file_fizzy_ocr_proto_rawDescData = file_fizzy_ocr_proto_rawDesc
)

func file_fizzy_ocr_proto_rawDescGZIP() []byte {
	file_fizzy_ocr_proto_rawDescOnce.Do(func() {
		file_fizzy_ocr_proto_rawDescData = protoimpl.X.CompressGZIP(file_fizzy_ocr_proto_rawDescData)
	})
	return file_fizzy_ocr_proto_rawDescData
}

var file_fizzy_ocr_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_fizzy_ocr_proto_goTypes = []interface{}{
	(*Polygon)(nil),                    // 0: fizzyocr.Polygon
	(*Coord)(nil),                      // 1: fizzyocr.Coord
	(*CommonOCRReq)(nil),               // 2: fizzyocr.CommonOCRReq
	(*GeneralOCRReq)(nil),              // 3: fizzyocr.GeneralOCRReq
	(*GeneralPrintOCRRsp)(nil),         // 4: fizzyocr.GeneralPrintOCRRsp
	(*GeneralPrintOCRRspData)(nil),     // 5: fizzyocr.GeneralPrintOCRRspData
	(*GeneralPrintOCRRspDataItem)(nil), // 6: fizzyocr.GeneralPrintOCRRspDataItem
	(*IdentityCardRsp)(nil),            // 7: fizzyocr.IdentityCardRsp
	(*IdentityCardRspData)(nil),        // 8: fizzyocr.IdentityCardRspData
	(*IdentityCardResult)(nil),         // 9: fizzyocr.IdentityCardResult
}
var file_fizzy_ocr_proto_depIdxs = []int32{
	1,  // 0: fizzyocr.Polygon.left_top:type_name -> fizzyocr.Coord
	1,  // 1: fizzyocr.Polygon.right_top:type_name -> fizzyocr.Coord
	1,  // 2: fizzyocr.Polygon.right_bottom:type_name -> fizzyocr.Coord
	1,  // 3: fizzyocr.Polygon.left_bottom:type_name -> fizzyocr.Coord
	5,  // 4: fizzyocr.GeneralPrintOCRRsp.data:type_name -> fizzyocr.GeneralPrintOCRRspData
	6,  // 5: fizzyocr.GeneralPrintOCRRspData.item:type_name -> fizzyocr.GeneralPrintOCRRspDataItem
	0,  // 6: fizzyocr.GeneralPrintOCRRspDataItem.polygon:type_name -> fizzyocr.Polygon
	8,  // 7: fizzyocr.IdentityCardRsp.data:type_name -> fizzyocr.IdentityCardRspData
	9,  // 8: fizzyocr.IdentityCardRspData.results:type_name -> fizzyocr.IdentityCardResult
	0,  // 9: fizzyocr.IdentityCardResult.polygon:type_name -> fizzyocr.Polygon
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_fizzy_ocr_proto_init() }
func file_fizzy_ocr_proto_init() {
	if File_fizzy_ocr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fizzy_ocr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polygon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonOCRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralOCRReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralPrintOCRRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralPrintOCRRspData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeneralPrintOCRRspDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityCardRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityCardRspData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fizzy_ocr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityCardResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fizzy_ocr_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fizzy_ocr_proto_goTypes,
		DependencyIndexes: file_fizzy_ocr_proto_depIdxs,
		MessageInfos:      file_fizzy_ocr_proto_msgTypes,
	}.Build()
	File_fizzy_ocr_proto = out.File
	file_fizzy_ocr_proto_rawDesc = nil
	file_fizzy_ocr_proto_goTypes = nil
	file_fizzy_ocr_proto_depIdxs = nil
}
