// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: fizzy_ocr_api.proto

package fizzyocrapi

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_fizzy_ocr_api_proto protoreflect.FileDescriptor

var file_fizzy_ocr_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x5f, 0x6f, 0x63, 0x72, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x61,
	0x70, 0x69, 0x1a, 0x11, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x5f, 0x6f, 0x63, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0x85, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x7a, 0x7a, 0x79,
	0x4f, 0x63, 0x72, 0x41, 0x70, 0x69, 0x12, 0x76, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x4f, 0x43, 0x52, 0x56, 0x31, 0x12, 0x1a, 0x2e, 0x66, 0x69,
	0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x6c, 0x4f, 0x43, 0x52, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f,
	0x63, 0x72, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x4f, 0x43, 0x52, 0x52, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x22, 0x19, 0x2f, 0x6f, 0x63, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2f, 0x76, 0x31, 0x3a, 0x01, 0x2a, 0x42, 0x10,
	0x5a, 0x0e, 0x2e, 0x2f, 0x3b, 0x66, 0x69, 0x7a, 0x7a, 0x79, 0x6f, 0x63, 0x72, 0x61, 0x70, 0x69,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_fizzy_ocr_api_proto_goTypes = []interface{}{
	(*GeneralOCRReq)(nil),      // 0: fizzyocrapi.GeneralOCRReq
	(*GeneralPrintOCRRsp)(nil), // 1: fizzyocrapi.GeneralPrintOCRRsp
}
var file_fizzy_ocr_api_proto_depIdxs = []int32{
	0, // 0: fizzyocrapi.FizzyOcrApi.GeneralPrintOCRV1:input_type -> fizzyocrapi.GeneralOCRReq
	1, // 1: fizzyocrapi.FizzyOcrApi.GeneralPrintOCRV1:output_type -> fizzyocrapi.GeneralPrintOCRRsp
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fizzy_ocr_api_proto_init() }
func file_fizzy_ocr_api_proto_init() {
	if File_fizzy_ocr_api_proto != nil {
		return
	}
	file_fizzy_ocr_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fizzy_ocr_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fizzy_ocr_api_proto_goTypes,
		DependencyIndexes: file_fizzy_ocr_api_proto_depIdxs,
	}.Build()
	File_fizzy_ocr_api_proto = out.File
	file_fizzy_ocr_api_proto_rawDesc = nil
	file_fizzy_ocr_api_proto_goTypes = nil
	file_fizzy_ocr_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FizzyOcrApiClient is the client API for FizzyOcrApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FizzyOcrApiClient interface {
	//通用印刷体识别V1
	GeneralPrintOCRV1(ctx context.Context, in *GeneralOCRReq, opts ...grpc.CallOption) (*GeneralPrintOCRRsp, error)
}

type fizzyOcrApiClient struct {
	cc grpc.ClientConnInterface
}

func NewFizzyOcrApiClient(cc grpc.ClientConnInterface) FizzyOcrApiClient {
	return &fizzyOcrApiClient{cc}
}

func (c *fizzyOcrApiClient) GeneralPrintOCRV1(ctx context.Context, in *GeneralOCRReq, opts ...grpc.CallOption) (*GeneralPrintOCRRsp, error) {
	out := new(GeneralPrintOCRRsp)
	err := c.cc.Invoke(ctx, "/fizzyocrapi.FizzyOcrApi/GeneralPrintOCRV1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FizzyOcrApiServer is the server API for FizzyOcrApi service.
type FizzyOcrApiServer interface {
	//通用印刷体识别V1
	GeneralPrintOCRV1(context.Context, *GeneralOCRReq) (*GeneralPrintOCRRsp, error)
}

// UnimplementedFizzyOcrApiServer can be embedded to have forward compatible implementations.
type UnimplementedFizzyOcrApiServer struct {
}

func (*UnimplementedFizzyOcrApiServer) GeneralPrintOCRV1(context.Context, *GeneralOCRReq) (*GeneralPrintOCRRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GeneralPrintOCRV1 not implemented")
}

func RegisterFizzyOcrApiServer(s *grpc.Server, srv FizzyOcrApiServer) {
	s.RegisterService(&_FizzyOcrApi_serviceDesc, srv)
}

func _FizzyOcrApi_GeneralPrintOCRV1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralOCRReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FizzyOcrApiServer).GeneralPrintOCRV1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fizzyocrapi.FizzyOcrApi/GeneralPrintOCRV1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FizzyOcrApiServer).GeneralPrintOCRV1(ctx, req.(*GeneralOCRReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FizzyOcrApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fizzyocrapi.FizzyOcrApi",
	HandlerType: (*FizzyOcrApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GeneralPrintOCRV1",
			Handler:    _FizzyOcrApi_GeneralPrintOCRV1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fizzy_ocr_api.proto",
}
